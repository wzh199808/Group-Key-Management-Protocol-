import random

from Crypto.Util.number import long_to_bytes
from Crypto.PublicKey import ECC
import timeit

#generates EccPoint p,q
#p = ECC.generate(curve="P-256").pointQ
#q = ECC.generate(curve="P-256").pointQ
p=ECC.EccPoint(97293952615094042486593850462815628695658731261357541032600404485959056056164, 54617021473634578883446961648385982312899992984529870771096111032586234087571)
q=ECC.EccPoint(110655231626752579876149704361595139278059845429824971994547425753882893255541, 1958765451170144125609064972443172733895831786451651375905484431907274508383)
pa=ECC.EccPoint(86504289893490872233311685945084305695545633490958553565823366403997065519182, 12386905096636602922957630815374652516675978911212489194921236397116332460248)
#p=ECC.EccPoint(72960571709492775828238122490582471846947081932169562080997863537055050120605,9143586266460997996622792017648519159880078980872642295165196297499981518111)
#q=ECC.EccPoint(95114675219156402242171089114048302529937148805885889912632728297702036637391,36710384249372129797801802739264940327987059109774556360604782716311585259650)
#pa=ECC.EccPoint(39946585804344957126281467671912519002240965535422744487799508301734544217341,63666138597101844502742020042091314277353595831799371955376232122012862436671)
#sm=ECC.EccPoint(29148609095433131568874715370664563662186901384628189101754138272312969487883,111425313032793091988671472134090128850047198607738283386876131143446947343065)
s=10000000
print(p.xy)
print(q.xy)
def add_points():
    d = p + q
def scalar_multiplication():
    e=p*s


# print('sm',(p*s).xy)
# print('sm',sm.xy)
print(timeit.timeit(add_points,number=1000))
print(timeit.timeit(scalar_multiplication,number=1000))
